{"version":3,"sources":["favicon.png","AppHeader.js","ListItem.js","ListView.js","NewItemView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppHeader","className","src","logo","alt","to","activeClassName","Component","lsListing","ListItem","props","handleChange","e","setState","target","name","value","updateList","preventDefault","state","company","length","newItem","id","UId","website","email","deleteItem","listing","list","localStorage","setItem","JSON","stringify","push","returnToList","alert","history","error","bind","parse","getItem","this","idx","findIndex","i","match","params","splice","htmlFor","type","onChange","placeholder","autoFocus","required","onClick","emptyList","ListView","editItem","console","log","loadItems","map","item","key","Button","NewItemView","onBlur","App","basename","process","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01fa4650.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.129b27ae.png\";","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from './favicon.png'\n\nexport default class AppHeader extends Component {\n\n  render() {\n    return (\n      <div className=\"App-header\">\n        <img className=\"logo ml-4 my-auto\" src={logo} alt=\"\"></img>\n        <h2 className=\"mx-auto my-auto title\">React Listing</h2>\n        <nav className=\"navbar justify-content-end\">\n          <ul className=\"nav nav-pills\">\n            <li><NavLink to=\"/item\" activeClassName=\"nav-item\">New Item</NavLink></li>\n          </ul>\n        </nav>\n      </div >\n    )\n  }\n}","import React, { Component } from 'react';\nimport AppHeader from './AppHeader';\nimport ListView from './ListView'\nimport UId from 'cuid';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nvar lsListing = [];\n\nexport default class ListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      company: '',\n      website: '',\n      email: '',\n      error: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    lsListing = JSON.parse(localStorage.getItem(\"MyList21051969\"));\n    this.setState({\n      list: lsListing\n    });\n    const idx = lsListing.findIndex(i => i.id === this.props.match.params.id);\n    this.setState({\n      company: lsListing[idx].company,\n      website: lsListing[idx].website,\n      email: lsListing[idx].email\n    });\n  }\n\n  deleteItem() {\n    const idx = lsListing.findIndex(i => i.id === this.props.match.params.id);\n    lsListing.splice(idx, 1);\n    localStorage.setItem(\"MyList21051969\", JSON.stringify(lsListing));\n    lsListing = localStorage.getItem(\"MyList21051969\");\n    this.setState({ list: JSON.parse(lsListing) });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  updateList = (e) => {\n    e.preventDefault();\n    if (this.state.company.length > 0) {\n      var uid = UId();\n      const newItem = {\n        id: uid,\n        company: this.state.company,\n        website: this.state.website,\n        email: this.state.email\n      };\n\n      this.deleteItem();\n      var listing = this.state.list;\n      if (listing === null || listing.length === 0) {\n        localStorage.setItem(\"MyList21051969\", JSON.stringify([newItem]));\n      } else {\n        listing.push(newItem);\n        localStorage.setItem(\"MyList21051969\", JSON.stringify(listing));\n      }\n      this.returnToList()\n    } else {\n      alert(\"Please input some valid text in Company's name\");\n    }\n  }\n\n  returnToList = (e) => {\n    this.props.history.push(\"/\");\n    return (<ListView />);\n  }\n\n  render() {\n    return (\n      <div id=\"list\">\n        <AppHeader />\n        <div className=\"card bg-light m-2\">\n          <div className=\"card-body\">\n            <div className=\"card-item p-2\">\n              <form>\n                <div className=\"form-group mb-4\">\n                  <label htmlFor=\"company\" className=\"col-sm-2\">Company</label>\n                  <div className=\"col-sm-10\">\n                    <input type=\"text\" value={this.state.company} className=\"form-control\" onChange={this.handleChange} id=\"formcompany\" name=\"company\" placeholder=\"Type the company's name\" autoFocus required></input>\n                  </div>\n                </div>\n                <div className=\"form-group mb-4\">\n                  <label htmlFor=\"website\" className=\"col-sm-2\">Website</label>\n                  <div className=\"col-sm-10\">\n                    <input type=\"text\" value={this.state.website} className=\"form-control\" onChange={this.handleChange} id=\"formurl\" name=\"website\" placeholder=\"Type the website URL\"></input>\n                  </div>\n                </div>\n                <div className=\"form-group mb-5\">\n                  <label htmlFor=\"email\" className=\"col-sm-2\">e-Mail</label>\n                  <div className=\"col-sm-10\">\n                    <input type=\"email\" value={this.state.email} className=\"form-control\" onChange={this.handleChange} id=\"formemail\" name=\"email\" placeholder=\"Type the main e-Mail\"></input>\n                  </div>\n                </div>\n                <div className=\"col-sm-10\">\n                  <button type=\"button\" onClick={this.returnToList} className=\"btn btn-outline-danger mr-3\">Cancel</button>\n                  <button type=\"button\" onClick={this.updateList} className=\"btn btn-outline-success\">Save</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        {this.state.error &&\n          <h3 className=\"error\">{this.state.error}</h3>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AppHeader from './AppHeader';\nimport ListItem from './ListItem'\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nvar lsListing = [];\nvar emptyList = true;\n\nexport default class ListView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      error: null\n    }\n  }\n\n  componentDidMount() {\n    this.loadItems();\n  }\n\n  loadItems() {\n    lsListing = localStorage.getItem(\"MyList21051969\");\n    emptyList = lsListing == null ? true : false;\n    this.setState({\n      list: emptyList ? [] : JSON.parse(lsListing),\n      error: null\n    });\n  }\n\n  editItem = (e) => {\n    console.log(\"ID Parent: \" + e.target.id);\n    this.props.history.push(`/item/${e.target.id}`);\n    return (<ListItem />);\n  }\n\n  deleteItem = (e) => {\n    console.log(\"ID Parent: \" + e.target.id);\n    lsListing = this.state.list;\n    const idx = lsListing.findIndex(i => i.id === e.target.id);\n    lsListing.splice(idx, 1);\n    localStorage.setItem(\"MyList21051969\", JSON.stringify(lsListing));\n    lsListing = localStorage.getItem(\"MyList21051969\");\n    this.setState({ list: JSON.parse(lsListing) });\n  }\n\n  render() {\n    return (\n      <div>\n        <AppHeader />\n        <div id=\"list\">\n          {this.state.list.length > 0 &&\n            this.state.list.map((item) => (\n              <div key={item.id} className=\"card bg-light m-1\">\n                <div className=\"card-body p-2\">\n                  <div className=\"d-flex p-2\">\n                    <div className=\"justify-content-start\">\n                      <h5 className=\"card-title\">Company: {item.company}</h5>\n                      <p className=\"card-text\">Website: {item.website}</p>\n                      <p className=\"card-text\">e-Mail: {item.email}</p>\n                    </div>\n                    <div className=\"d-flex align-items-start flex-column ml-auto\">\n                      <div className=\"mb-auto\">\n                        <Button onClick={this.editItem} id={item.id} className=\"btn btn-outline-success\">Edit</Button>\n                      </div>\n                      <div >\n                        <Button onClick={this.deleteItem} id={item.id} className=\"btn btn-outline-danger\">Delete</Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          {this.state.list.length === 0 &&\n            <h3 className=\"error\">Item List is Empty<br />Click New Item</h3>}\n          {this.state.error &&\n            <h3 className=\"error\">{this.state.error}</h3>}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AppHeader from './AppHeader';\nimport ListView from './ListView'\nimport UId from 'cuid';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nexport default class NewItemView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      company: '',\n      website: '',\n      email: '',\n      error: null\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  updateList = (e) => {\n    e.preventDefault();\n    if (this.state.company.length > 0) {\n      var uid = UId();\n      const newItem = {\n        id: uid,\n        company: this.state.company,\n        website: this.state.website,\n        email: this.state.email\n      };\n\n      var lsListing = localStorage.getItem(\"MyList21051969\");\n      var listing = JSON.parse(lsListing);\n      if (listing === null || listing.length === 0) {\n        localStorage.setItem(\"MyList21051969\", JSON.stringify([newItem]));\n      } else {\n        listing.push(newItem);\n        localStorage.setItem(\"MyList21051969\", JSON.stringify(listing));\n      }\n      this.returnToList()\n    } else {\n      alert(\"Please input some valid text in Company's name\");\n    }\n  }\n\n  returnToList = (e) => {\n    this.props.history.push(\"/\");\n    return (<ListView />);\n  }\n\n  render() {\n    return (\n      <div id=\"list\">\n        <AppHeader />\n        <div className=\"card bg-light m-2\">\n          <div className=\"card-body\">\n            <div className=\"card-item p-2\">\n              <form>\n                <div className=\"form-group mb-4\">\n                  <label htmlFor=\"company\" className=\"col-sm-2\">Company</label>\n                  <div className=\"col-sm-10\">\n                    <input type=\"text\" className=\"form-control\" onBlur={this.handleChange} id=\"formcompany\" name=\"company\" placeholder=\"Type the company's name\" autoFocus required></input>\n                  </div>\n                </div>\n                <div className=\"form-group mb-4\">\n                  <label htmlFor=\"website\" className=\"col-sm-2\">Website</label>\n                  <div className=\"col-sm-10\">\n                    <input type=\"text\" className=\"form-control\" onBlur={this.handleChange} id=\"formurl\" name=\"website\" placeholder=\"Type the website URL\"></input>\n                  </div>\n                </div>\n                <div className=\"form-group mb-5\">\n                  <label htmlFor=\"email\" className=\"col-sm-2\">e-Mail</label>\n                  <div className=\"col-sm-10\">\n                    <input type=\"email\" className=\"form-control\" onBlur={this.handleChange} id=\"formemail\" name=\"email\" placeholder=\"Type the main e-Mail\"></input>\n                  </div>\n                </div>\n                <div className=\"col-sm-10\">\n                  <button type=\"button\" onClick={this.returnToList} className=\"btn btn-outline-danger mr-3\">Cancel</button>\n                  <button type=\"button\" onClick={this.updateList} className=\"btn btn-outline-success\">Save</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        {this.state.error &&\n          <h3 className=\"error\">{this.state.error}</h3>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, BrowserRouter, Switch, Route } from 'react-router-dom';\nimport ListView from './ListView'\nimport NewItemView from './NewItemView'\nimport ListItem from './ListItem'\nimport './App.css';\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path='/' component={ListView} />\n          <Route path='/item/:id' component={ListItem} />\n          <Route path='/item' component={NewItemView} />\n          <Route component={NotFound} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <h1 className=\"error\">Error 404 - URL Not Found</h1>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}